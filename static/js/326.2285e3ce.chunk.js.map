{"version":3,"file":"static/js/326.2285e3ce.chunk.js","mappings":"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","sources":["components/profile/Header.js","../node_modules/nanoid/index.browser.js","components/profile/Photos.js","pages/Profile.js"],"sourcesContent":["import ActiveUserDataContext from \"../../contexts/ActiveUserDataContext\";\r\nimport React from \"react\";\r\nimport {updateFollowing , updateFollowers} from '../../services/firebase';\r\nimport Unfollow from \"../Unfollow\";\r\nimport { LOGIN } from \"../../constants/Routes\";\r\nimport { useNavigate } from 'react-router-dom'\r\nfunction Header({userId,username,fullName,following,followers,photos,docId}){\r\n    const [isFollowing,setIsFollowing] = React.useState(false);\r\n    const [overlayState,setOverlayState] = React.useState(false);\r\n    const [followersCount,setFollowersCount] = React.useState();\r\n    const activeUserData = React.useContext(ActiveUserDataContext);\r\n    const navigate = useNavigate();\r\n\r\n    \r\n    const isTheActiveUserProfile = activeUserData && userId ? \r\n        activeUserData?.userId === userId \r\n        :\r\n        false;\r\n\r\n    React.useEffect(()=>{\r\n        if(! isTheActiveUserProfile){\r\n            if(activeUserData?.following.includes(userId)){\r\n                setIsFollowing(true);\r\n            }\r\n        }\r\n    },[ userId])\r\n\r\n\r\n    React.useEffect(()=>{\r\n        setFollowersCount(followers?.length)\r\n        \r\n    },[followers])\r\n\r\n    let isProfileFollowingActiveUser = false;\r\n    if(!isTheActiveUserProfile){\r\n        if(following?.includes(activeUserData?.userId)){\r\n            isProfileFollowingActiveUser = true;\r\n        }\r\n    }\r\n    async function unfollowHandler(){\r\n        if(activeUserData){\r\n            await updateFollowing(activeUserData.docId,userId,true);\r\n            await updateFollowers(docId,activeUserData.userId,true);\r\n            setIsFollowing(false);\r\n            setOverlayState(false);\r\n            setFollowersCount(prv=>prv-1);\r\n        }else{\r\n            navigate(LOGIN)\r\n        }                                               \r\n    }\r\n    const followHandler =async()=>{\r\n        if(activeUserData){\r\n            await updateFollowing(activeUserData.docId,userId,false);\r\n            await updateFollowers(docId,activeUserData.userId,false);\r\n            setIsFollowing(true);\r\n            setFollowersCount(prv=>prv+1);\r\n        }else{\r\n            navigate(LOGIN)\r\n        }                                               \r\n    }\r\n    \r\n    return (\r\n        <div className=\"profile-header\" >\r\n            <div className=\"main-info\">\r\n                <div className=\"profile-img\">\r\n                <img \r\n                    src={`https://raw.githubusercontent.com/Amr-Zain/React-Instagram-Clone/master/public/images/avatars/${username}.jpg`}\r\n                    alt={`@${username}`}\r\n                    onError={(e) => {\r\n                        e.target.src = `https://raw.githubusercontent.com/Amr-Zain/React-Instagram-Clone/master/public/images/avatars/default.png`;\r\n                        //console.log(e.target.src)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"profile-info\">\r\n                        <div className=\"user-info\">\r\n                            <h3 className=\"username\">{username}</h3>\r\n                            <div>\r\n                                {\r\n                                    !isTheActiveUserProfile?\r\n                                    <>\r\n                                        {\r\n                                            isFollowing ?\r\n                                                <button \r\n                                                className=\"following\"//onClick put overlay\r\n                                                onClick={()=>{setOverlayState(true)}}\r\n                                                >\r\n                                                    <svg style={{cursor:'pointer'}} aria-label=\"Following\" className=\"_ab6-\" color=\"#262626\" fill=\"#262626\" height=\"15\" role=\"img\" viewBox=\"0 0 95.28 70.03\" \r\n                                                    width=\"20\"><path d=\"M64.23 69.98c-8.66 0-17.32-.09-26 0-3.58.06-5.07-1.23-5.12-4.94-.16-11.7 8.31-20.83 \r\n                                                    20-21.06 7.32-.15 14.65-.14 22 0 11.75.22 20.24 9.28 20.1 21 0 3.63-1.38 5.08-5 5-8.62-.1-17.28 0-25.98 \r\n                                                    0zm19-50.8A19 19 0 1164.32 0a19.05 19.05 0 0118.91 19.18zM14.76 50.01a5 5 0 01-3.37-1.31L.81 39.09a2.5 2.5 0 \r\n                                                    01-.16-3.52l3.39-3.7a2.49 2.49 0 013.52-.16l7.07 6.38 15.73-15.51a2.48 2.48 0 013.52 0l3.53 3.58a2.49 2.49 0 010 \r\n                                                    3.52L18.23 48.57a5 5 0 01-3.47 1.44z\"></path></svg>\r\n                                                </button>\r\n                                            :\r\n                                                <button className=\"not-following\"\r\n                                                    onClick={followHandler}>\r\n                                                    <p>\r\n                                                    {isProfileFollowingActiveUser ? \"Follow Back\":\"Follow\"}\r\n                                                    </p>\r\n                                                </button>\r\n                                            \r\n                                        }\r\n                                        \r\n                                    </>\r\n                                    :\r\n                                    <></>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user-follow\"> \r\n                            <div><span>{photos}</span> posts</div>\r\n                            <div><span>{followersCount}</span> followers</div>\r\n                            <div><span>{following?.length}</span> following</div>\r\n                        </div>\r\n                        <h4 className=\"full-name\">{fullName}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                <h4 className=\"full-name-col\">{fullName}</h4>\r\n                <div className=\"user-follow-col\"> \r\n                            <div><span>{photos}</span> <h3>posts</h3></div>\r\n                            <div><span>{followersCount}</span> <h3>followers</h3></div>\r\n                            <div><span>{following?.length}</span> <h3>following</h3></div>\r\n                </div>\r\n                <Unfollow overlayState={overlayState} setOverlayState={setOverlayState}\r\n                    username={username} unfollowHandler={unfollowHandler} />\r\n            </div>)\r\n\r\n}\r\nexport default Header;\r\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import React from \"react\"\r\nimport { getProfilPhotos } from '../../services/firebase'\r\nimport {nanoid} from \"nanoid\"\r\nfunction Photos({userId}){\r\n\r\n    const [profilePhotos,setProfilePhotos] = React.useState(null);\r\n\r\n    React.useEffect(()=>{\r\n        async function get(){\r\n            const images = await getProfilPhotos(userId);\r\n            setProfilePhotos(images);\r\n            //console.log(profilePhotos)\r\n        }\r\n        if(userId){\r\n            get();\r\n        }\r\n    },[userId])\r\n\r\n\r\n    const images = profilePhotos?.map((photo)=>{\r\n        return(\r\n            <div key={photo?.dicId}className=\"img-container\">\r\n                <div className=\"el\"></div>\r\n                    <div  className =\"photo\">\r\n                        <div className=\"over\">  </div>\r\n                        <div className=\"icons\">\r\n                            <div>\r\n                            <svg  style={{fill:'white'}} aria-label=\"Unlike\" className=\"_ab6-\" color=\"#ed4956\" fill=\"#ed4956\" height=\"24\" \r\n                                role=\"img\" viewBox=\"0 0 48 48\" width=\"24\"><path d=\"M34.6 3.1c-4.5 0-7.9 \r\n                                1.8-10.6 5.6-2.7-3.7-6.1-5.5-10.6-5.5C6 3.1 0 9.6 0 17.6c0 7.3 5.4 12 10.6 \r\n                                16.5.6.5 1.3 1.1 1.9 1.7l2.3 2c4.4 3.9 6.6 5.9 7.6 6.5.5.3 1.1.5 1.6.5s1.1-.2 \r\n                                1.6-.5c1-.6 2.8-2.2 7.8-6.8l2-1.8c.7-.6 1.3-1.2 2-1.7C42.7 29.6 48 25 48 17.6c0-8-6-14.5-13.4-14.5z\"></path></svg>\r\n                                <span>{photo?.likes.length}</span>\r\n                            </div>\r\n                            <div>\r\n                            <svg style={{color:'white'}} aria-label=\"Comment\" className=\"_ab6-\" color=\"#262626\" fill=\"#262626\" height=\"24\" \r\n                                role=\"img\" viewBox=\"0 0 24 24\" width=\"24\">\r\n                                    <path d=\"M20.656 17.008a9.993 9.993 0 10-3.59 3.615L22 22z\" \r\n                                    fill=\"none\" stroke=\"currentColor\" strokeLinejoin=\"round\" \r\n                                    strokeWidth=\"2\"></path></svg>\r\n                                <span>{photo?.comments}</span>\r\n                            </div>\r\n                        </div>\r\n                        <img src={`https://raw.githubusercontent.com/Amr-Zain/React-Instagram-Clone/master/public${photo?.imageSrc}`} alt='userimg'/>\r\n                    </div>\r\n            </div>\r\n        )\r\n    })\r\n    let photosElements= []\r\n    \r\n        for(let i =0;i<profilePhotos?.length;i+=3){\r\n            const group =\r\n                        <div key={nanoid()} className=\"photos-row\">\r\n                            {images[i]}\r\n                            {images[i+1]}\r\n                            {images[i+2]}\r\n                        </div>\r\n            photosElements.push(group);\r\n        }\r\n  \r\n\r\n    return(\r\n        <div className=\"profile-photos\">\r\n            {\r\n                photosElements.length<1?\r\n                <p className=\"no-photos\">No Posts Yet</p>:\r\n                photosElements\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Photos;\r\n","import React from \"react\";\r\nimport Header from \"../components/profile/Header\";\r\nimport Photos from \"../components/profile/Photos\";\r\nimport { getUserByUsername } from '../services/firebase';\r\nimport { useParams } from \"react-router-dom\"\r\nimport '../styles/profile.css'\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport { NOT_FOUND } from \"../constants/Routes\"\r\nfunction Profile(){\r\n    const {username} = useParams();\r\n    \r\n    const [profileData,setProfileData] = React.useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    React.useEffect(()=>{\r\n        async function get(){\r\n            const respose = await getUserByUsername(username);\r\n            if(respose){\r\n                setProfileData(respose);\r\n            }else{\r\n                //this username not exist\r\n                navigate(NOT_FOUND);\r\n                return;\r\n            }\r\n            \r\n        }\r\n        if(username){\r\n            get();\r\n        }\r\n    },[username])\r\n    \r\n    \r\n    \r\n    return (\r\n        <>\r\n        <div className=\"profile\">\r\n            <div className=\"profile-container\">\r\n                <Header {...profileData} />\r\n                <Photos userId ={profileData?.userId}/>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default Profile;"],"names":["userId","username","fullName","following","followers","photos","docId","React","isFollowing","setIsFollowing","overlayState","setOverlayState","followersCount","setFollowersCount","activeUserData","ActiveUserDataContext","navigate","useNavigate","isTheActiveUserProfile","includes","length","isProfileFollowingActiveUser","updateFollowing","updateFollowers","prv","LOGIN","followHandler","className","src","alt","onError","e","target","onClick","style","cursor","color","fill","height","role","viewBox","width","d","Unfollow","unfollowHandler","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","profilePhotos","setProfilePhotos","getProfilPhotos","images","get","map","photo","likes","stroke","strokeLinejoin","strokeWidth","comments","imageSrc","dicId","photosElements","i","group","push","useParams","profileData","setProfileData","getUserByUsername","respose","NOT_FOUND"],"sourceRoot":""}